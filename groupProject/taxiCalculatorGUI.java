/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package groupProject;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
/**
 *
 * @author weioo
 */
public class taxiCalculatorGUI extends javax.swing.JFrame {
  public static ArrayList<TaxiFare> passenger = new ArrayList<TaxiFare>();
 TaxiFare currentBill;
 
    /**
     * Creates new form taxiCalculatorGUI
     */
    public taxiCalculatorGUI() {
        initComponents();
    }

      public static void writeFile()throws IOException{
        FileWriter tulis = new FileWriter("C:/project/TaxiFareGUI.txt");
        PrintWriter teks = new PrintWriter(tulis);
        
        int num =1;
        for(TaxiFare i: passenger){
            teks.write("\n<<<<<<< CUSTOMER " + num+">>>>>>>\n");
            teks.write(i.toString());
            teks.write("\n\n");
            num++; 
        }
            tulis.close();
    }
      
      public static void readFile()throws IOException{
        File inFile = new File ("C:/project/TaxiFareGUI.txt");
        Scanner scan = new Scanner(inFile);
        
        while(scan.hasNextLine()){
            String line = scan.nextLine();
            outputTA.append(line + "\n");
        }
        scan.close();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        kmTF = new javax.swing.JTextField();
        kmLB = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        nameLB = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        airportRB = new javax.swing.JRadioButton();
        luggageRB = new javax.swing.JRadioButton();
        ordByPhoneRB = new javax.swing.JRadioButton();
        nightRB = new javax.swing.JRadioButton();
        dayRB = new javax.swing.JRadioButton();
        timeSloteLB = new javax.swing.JLabel();
        exitBT = new javax.swing.JButton();
        resetBT = new javax.swing.JButton();
        addBTN = new javax.swing.JButton();
        editBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        displayBTN = new javax.swing.JButton();
        searchBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTA = new javax.swing.JTextArea();
        icLB = new javax.swing.JLabel();
        icTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        phoneNoTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fromTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        toTF = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        printBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(51, 204, 255));

        kmLB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        kmLB.setText("KM:");

        nameLB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nameLB.setText("Name:");

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("By day:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Base fee (First 1Km) = RM 3.00");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Price per km = RM1.25");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("By night:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Base fee (First 1Km) = RM 4.50");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Price per km = RM1.88");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Surcharges:");

        jLabel11.setText("Airport = RM12");

        jLabel12.setText("Luggage Compartment = RM1");

        jLabel13.setText("Order by phone = RM2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(129, 129, 129)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addGap(31, 31, 31)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addGap(37, 37, 37)
                .addComponent(jLabel12)
                .addGap(37, 37, 37)
                .addComponent(jLabel13)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Surcharges", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        airportRB.setBackground(new java.awt.Color(51, 204, 255));
        airportRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        airportRB.setText("Airport");

        luggageRB.setBackground(new java.awt.Color(51, 204, 255));
        luggageRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        luggageRB.setText("Luggage Compartment");

        ordByPhoneRB.setBackground(new java.awt.Color(0, 204, 255));
        ordByPhoneRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ordByPhoneRB.setText("Order by phone");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(luggageRB)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(airportRB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 296, Short.MAX_VALUE)
                        .addComponent(ordByPhoneRB)
                        .addGap(85, 85, 85))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airportRB)
                    .addComponent(ordByPhoneRB))
                .addGap(33, 33, 33)
                .addComponent(luggageRB)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        nightRB.setBackground(new java.awt.Color(51, 204, 255));
        buttonGroup1.add(nightRB);
        nightRB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nightRB.setText("Night");

        dayRB.setBackground(new java.awt.Color(51, 204, 255));
        buttonGroup1.add(dayRB);
        dayRB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dayRB.setText("Day");

        timeSloteLB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        timeSloteLB.setText("Time slot:");

        exitBT.setBackground(new java.awt.Color(255, 255, 255));
        exitBT.setText("Exit");
        exitBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBTActionPerformed(evt);
            }
        });

        resetBT.setBackground(new java.awt.Color(255, 255, 255));
        resetBT.setText("Reset");
        resetBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBTActionPerformed(evt);
            }
        });

        addBTN.setBackground(new java.awt.Color(255, 255, 255));
        addBTN.setText("Add");
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        editBTN.setBackground(new java.awt.Color(255, 255, 255));
        editBTN.setText("Edit");
        editBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBTNActionPerformed(evt);
            }
        });

        deleteBTN.setBackground(new java.awt.Color(255, 255, 255));
        deleteBTN.setText("Delete");
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });

        displayBTN.setBackground(new java.awt.Color(255, 255, 255));
        displayBTN.setText("Display");
        displayBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBTNActionPerformed(evt);
            }
        });

        searchBTN.setBackground(new java.awt.Color(255, 255, 255));
        searchBTN.setText("Search");
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        outputTA.setColumns(20);
        outputTA.setRows(5);
        jScrollPane1.setViewportView(outputTA);

        icLB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        icLB.setText("Identity card number(without \"-\"):");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Phone number(without \"-\"):");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("From:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("To:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Customer information");

        printBTN.setBackground(new java.awt.Color(255, 255, 255));
        printBTN.setText("Print");
        printBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(icLB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(icTF, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(phoneNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(jLabel2)
                                .addGap(33, 33, 33)
                                .addComponent(fromTF, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(96, 96, 96)
                                .addComponent(toTF, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(51, 51, 51))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(nameLB, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kmLB)
                        .addGap(18, 18, 18)
                        .addComponent(kmTF, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(679, 679, 679))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(timeSloteLB)
                                .addGap(42, 42, 42)
                                .addComponent(dayRB)
                                .addGap(59, 59, 59)
                                .addComponent(nightRB))
                            .addComponent(jLabel14)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(addBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchBTN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(editBTN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(65, 65, 65)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exitBT, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(deleteBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(resetBT, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(38, 38, 38)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(printBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(displayBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(120, 120, 120))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLB, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kmLB)
                    .addComponent(kmTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(phoneNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(icLB)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(icTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(fromTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(toTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timeSloteLB)
                            .addComponent(dayRB)
                            .addComponent(nightRB))
                        .addGap(37, 37, 37)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBTN)
                            .addComponent(deleteBTN)
                            .addComponent(displayBTN))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resetBT)
                            .addComponent(printBTN)
                            .addComponent(searchBTN))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exitBT)
                            .addComponent(editBTN))
                        .addGap(36, 36, 36))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        // TODO add your handling code here:
           try {
        String passengerName = nameTF.getText().trim();
        String ic = icTF.getText().trim();
        String phoneNo = phoneNoTF.getText().trim();
        String kmText = kmTF.getText().trim();
        String from = fromTF.getText().trim();
        String to = toTF.getText().trim();

        // Check if all required fields are filled
        if (passengerName.isEmpty() || ic.isEmpty() || phoneNo.isEmpty() || kmText.isEmpty() || from.isEmpty() || to.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all required fields.", "Missing Information", JOptionPane.WARNING_MESSAGE);
            return; // Exit the method without saving the data
        }

        double kilometer = Double.parseDouble(kmText);

        boolean day = dayRB.isSelected();
        boolean night = nightRB.isSelected();
        boolean airport = airportRB.isSelected();
        boolean luggage = luggageRB.isSelected();
        boolean orderByPhone = ordByPhoneRB.isSelected();

        passenger.add(new TaxiFare(passengerName, ic, phoneNo, from, to, kilometer, day, night, airport, luggage, orderByPhone));
        for (TaxiFare i : passenger) {
            i.calculateTaxiFareDay();
            i.calculateTaxiFareNight();
        }

        writeFile();
        JOptionPane.showMessageDialog(null, "Data is Saved.", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid input for kilometers.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error occurred while saving data.", "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace(); // You can print the stack trace for debugging purposes.
    }
    }//GEN-LAST:event_addBTNActionPerformed

    private void displayBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBTNActionPerformed
        // TODO add your handling code here:
        StringBuilder displayText = new StringBuilder();
      try {
        for (TaxiFare i : passenger) {
            displayText.append(i.toString()).append("\n\n");
        }
    } catch (Exception e) {
        // Handle any exception that might occur during the for-loop.
        // You can display an error message or take appropriate actions.
        e.printStackTrace(); // You can print the stack trace for debugging purposes.
    }
    
    // Move the writeFile and readFile outside the try-catch block
    try {
        writeFile();
        readFile();
    } catch (Exception e) {
        // Handle any exception that might occur during the file operations.
        // You can display an error message or take appropriate actions.
        e.printStackTrace(); // You can print the stack trace for debugging purposes.
    }

    // Update the outputTA with the new data after successful file operations.
    outputTA.setText(displayText.toString());
    }//GEN-LAST:event_displayBTNActionPerformed

    private void exitBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBTActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitBTActionPerformed

    private void clearFormFields() {
        nameTF.setText("");
        kmTF.setText("");
        icTF.setText("");
        phoneNoTF.setText("");
        fromTF.setText("");
        toTF.setText("");
        buttonGroup1.clearSelection();
        airportRB.setSelected(false);
        luggageRB.setSelected(false);
        ordByPhoneRB.setSelected(false);
    }
    
    private void resetBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBTActionPerformed
        // TODO add your handling code here:
        clearFormFields();
        if (currentBill != null) {
        passenger.add(currentBill);
    }
    }//GEN-LAST:event_resetBTActionPerformed

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        // TODO add your handling code here:
        String search = JOptionPane.showInputDialog(null, "Enter the name of the customer to search for:", "Input",JOptionPane.QUESTION_MESSAGE);
        boolean found = false;
        for(TaxiFare i: passenger){
            if(i.getName().equals(search)){
                outputTA.setText(i.toString());
                found = true;
                break;
            }
        }
        if(found == false){
            JOptionPane.showMessageDialog(null,"Your search is not found.", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_searchBTNActionPerformed

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
        // TODO add your handling code here:
     String delete = JOptionPane.showInputDialog(null, "Enter the name of the customer to be deleted:", "Input", JOptionPane.QUESTION_MESSAGE);
    int index = -1; // Initialize index to -1 to handle cases where passenger is not found
    boolean found = false;
    for (TaxiFare i : passenger) {
        if (i.getName().equals(delete)) {
            index = passenger.indexOf(i);
            passenger.remove(index);
            found = true;
            break;
        }
    }

    if (found) {
        try {
            writeFile(); // Write the updated list after all deletions
            readFile();  // Read the updated list after writing
            JOptionPane.showMessageDialog(null, "Data is deleted.", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);

            // Rebuild the displayText after the deletion
            StringBuilder displayText = new StringBuilder();
            for (TaxiFare i : passenger) {
                displayText.append(i.toString()).append("\n\n");
            }

            // Update the outputTA with the new data after successful file operations.
            outputTA.setText(displayText.toString());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error occurred during file I/O operation.", "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); 
        }
    } else {
        JOptionPane.showMessageDialog(null, "Your data is not found.", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
    }      
       
    }//GEN-LAST:event_deleteBTNActionPerformed

    private void editBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBTNActionPerformed
        // TODO add your handling code here:
     StringBuilder displayText = new StringBuilder();
    int index;
    boolean found = false; 
    try{
    String update = JOptionPane.showInputDialog(null, "Enter the name of the passenger to be updated:", "Input", JOptionPane.QUESTION_MESSAGE);
    for (TaxiFare i : passenger) {
        if (i.getName().equals(update)) {
            found = true;
            String newpassengerName = JOptionPane.showInputDialog(null, "Enter the new name of the passenger:", "Input", JOptionPane.QUESTION_MESSAGE);
            String newIcNum = JOptionPane.showInputDialog(null, "Enter the new idnetity card number of the passenger:", "Input", JOptionPane.QUESTION_MESSAGE);
            String newKmText = JOptionPane.showInputDialog(null, "Enter the new kilometers of the passenger:", "Input", JOptionPane.QUESTION_MESSAGE);
            double newKm = Double.parseDouble(newKmText);
            String newPhoneNo = JOptionPane.showInputDialog(null, "Enter the new phone number of the passenger:", "Input", JOptionPane.QUESTION_MESSAGE);
            String newFrom = JOptionPane.showInputDialog(null, "Enter the new destination come from of the passenger:", "Input", JOptionPane.QUESTION_MESSAGE);
            String newTo = JOptionPane.showInputDialog(null, "Enter the new final destination of the passenger:", "Input", JOptionPane.QUESTION_MESSAGE);
            String dayOrnightCB[] = {"Day", "Night"};
            JComboBox<String> cb = new JComboBox<>(dayOrnightCB);
            int newdayOrnightInput = JOptionPane.showConfirmDialog(null, cb, "Day or night", JOptionPane.DEFAULT_OPTION);
            
            // Update the 'day' variable using the selected option from the dialog
            if (newdayOrnightInput == JOptionPane.OK_OPTION) {
                String newnewdayOrnightInputText = (String) cb.getSelectedItem();
                if (newnewdayOrnightInputText.equals("Day")) {
                    i.setDay(true);
                } else if (newnewdayOrnightInputText.equals("Night")) {
                    i.setDay(false);
                }
            }

            i.setName(newpassengerName);
            i.setIc(newIcNum);
            i.setKilometer(newKm);
            i.setPhoneNO(newPhoneNo);
            i.setFrom(newFrom);
            i.setTo(newTo);
            i.setKilometer(newKm);
            i.calculateTaxiFareDay();
            JOptionPane.showMessageDialog(null, "Data edit successfully.", "DATA INFO",JOptionPane.INFORMATION_MESSAGE);
            writeFile();
            readFile();
        }
      }    
    if (!found) {
        JOptionPane.showMessageDialog(null, "Passenger not found.", "Not Found", JOptionPane.WARNING_MESSAGE);
        }
    }//try
    catch(Exception e){
    e.printStackTrace();
    }//catch
    }//GEN-LAST:event_editBTNActionPerformed

    private void printBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBTNActionPerformed
        // TODO add your handling code here:
         String search = JOptionPane.showInputDialog(null, "Enter the name of the customer to print out the receipt:", "Input", JOptionPane.QUESTION_MESSAGE);
    boolean found = false;
    for (TaxiFare i : passenger) {
        if (i.getName().equals(search)) {
            found = true;
            TaxiReceiptGUI frame3 = new TaxiReceiptGUI(i.toString()); // Pass the toString() output
            frame3.setVisible(true);

            break;
        }
    }
    if (found == false) {
        JOptionPane.showMessageDialog(null, "Your search is not found.", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_printBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(taxiCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(taxiCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(taxiCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(taxiCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new taxiCalculatorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBTN;
    private javax.swing.JRadioButton airportRB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton dayRB;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JButton displayBTN;
    private javax.swing.JButton editBTN;
    private javax.swing.JButton exitBT;
    private javax.swing.JTextField fromTF;
    private javax.swing.JLabel icLB;
    private javax.swing.JTextField icTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel kmLB;
    private javax.swing.JTextField kmTF;
    private javax.swing.JRadioButton luggageRB;
    private javax.swing.JLabel nameLB;
    private javax.swing.JTextField nameTF;
    private javax.swing.JRadioButton nightRB;
    private javax.swing.JRadioButton ordByPhoneRB;
    private static javax.swing.JTextArea outputTA;
    private javax.swing.JTextField phoneNoTF;
    private javax.swing.JButton printBTN;
    private javax.swing.JButton resetBT;
    private javax.swing.JButton searchBTN;
    private javax.swing.JLabel timeSloteLB;
    private javax.swing.JTextField toTF;
    // End of variables declaration//GEN-END:variables
}
